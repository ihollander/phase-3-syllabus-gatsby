<style>
  .high {
    color: red;
  }
  .medium {
    color: orange;
  }
  .low {
    color: green;
  }
</style>


<div class="exercise">
  <h2>Todo List</h2>
  <input type="text" id="filter" placeholder="Type to filter" />

  <ul id="todo-list">
    <!-- todos go here -->
  </ul>
</div>

<script>
  const { expect } = chai

  function getFirstVisibleElement(elements) {
    let found = null;
    let i = 0;
    while (i < elements.length && found === null) {
      if (elements[i].offsetWidth > 0 && elements[i].offsetHeight > 0) {
        found = elements[i]
      }
      i++
    }
    return found
  }

  describe('ul#todo-list', function () {
    const list = document.querySelector("#todo-list")
    const filter = document.querySelector("#filter")
    let changeEvent, inputEvent;

    beforeEach(function() {
      changeEvent = new Event('change', {
        bubbles: true,
        cancelable: true,
      })
      inputEvent = new Event('input', {
        bubbles: true,
        cancelable: true,
      })
    })

    it('should filter the list of inputs to match based on description', function () {
      filter.value = "sleep"
      filter.dispatchEvent(inputEvent)
      filter.dispatchEvent(changeEvent)
      console.log(list.children)
      const firstVisibleElement = getFirstVisibleElement(list.children)
      expect(firstVisibleElement).to.not.equal(null)
      expect(firstVisibleElement.textContent).to.equal("sleep")
    });

    it('should filter the list of inputs to match based on description with partial matches', function () {
      filter.value = "p"
      filter.dispatchEvent(inputEvent)
      filter.dispatchEvent(changeEvent)
      console.log(list.children)
      const firstVisibleElement = getFirstVisibleElement(list.children)
      expect(firstVisibleElement).to.not.equal(null)
      expect(firstVisibleElement.textContent).to.equal("sleep")
    });

  });
</script>
